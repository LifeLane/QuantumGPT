
// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview AI Trading Strategy Suggestion flow.
 *
 * - suggestTradingStrategy - A function that suggests a trading strategy for a given cryptocurrency.
 * - SuggestTradingStrategyInput - The input type for the suggestTradingStrategy function.
 * - SuggestTradingStrategyOutput - The return type for the suggestTradingStrategy function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestTradingStrategyInputSchema = z.object({
  cryptocurrency: z.string().describe('The ticker symbol of the cryptocurrency to analyze (e.g., BTC).'),
  riskTolerance: z.enum(['low', 'medium', 'high']).describe('The user\'s risk tolerance level.'),
});
export type SuggestTradingStrategyInput = z.infer<typeof SuggestTradingStrategyInputSchema>;

const SuggestTradingStrategyOutputSchema = z.object({
  strategyExplanation: z.string().describe('A detailed explanation of the suggested trading strategy.'),
  entryPoint: z.number().describe('An illustrative suggested entry point for the trade, based on the strategy. Not live financial advice.'),
  exitPoint: z.number().describe('An illustrative suggested exit point for the trade, based on the strategy. Not live financial advice.'),
  stopLossLevel: z.number().describe('An illustrative suggested stop-loss level for the trade, based on the strategy. Not live financial advice.'),
  profitTarget: z.number().describe('An illustrative profit target for the trade, based on the strategy. Not live financial advice.'),
  disclaimer: z
    .string()
    .describe(
      'A disclaimer emphasizing the risks involved in trading, the illustrative nature of the provided figures, and the importance of consulting a financial expert.'
    ),
});
export type SuggestTradingStrategyOutput = z.infer<typeof SuggestTradingStrategyOutputSchema>;

export async function suggestTradingStrategy(input: SuggestTradingStrategyInput): Promise<SuggestTradingStrategyOutput> {
  return suggestTradingStrategyFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestTradingStrategyPrompt',
  input: {schema: SuggestTradingStrategyInputSchema},
  output: {schema: SuggestTradingStrategyOutputSchema},
  prompt: `You are an AI-powered trading strategy advisor.

You will suggest an optimal trading strategy for the selected cryptocurrency based on historical data concepts, general market trends, and user-defined risk tolerance. The numerical values for entry/exit points, stop-loss, and profit targets should be considered as illustrative examples derived from the strategy, not as live financial advice or real-time market data.

Cryptocurrency: {{{cryptocurrency}}}
Risk Tolerance: {{{riskTolerance}}}

Consider the following:
- General historical price data concepts and chart patterns (do not use real-time data)
- General current market trends and news sentiment concepts (do not use real-time data)
- User's risk tolerance (low, medium, high)

Provide the following:
- Strategy Explanation: A clear and concise explanation of the suggested strategy.
- Entry Point: An *illustrative recommended price* to enter the trade based on the strategy.
- Exit Point: An *illustrative recommended price* to exit the trade based on the strategy.
- Stop-Loss Level: An *illustrative price level* at which to set a stop-loss order based on the strategy.
- Profit Target: An *illustrative price level* at which to take profit based on the strategy.
- Disclaimer: A standard disclaimer about the risks of trading and the illustrative nature of the provided figures.

Format your response as a JSON object with the fields: strategyExplanation, entryPoint, exitPoint, stopLossLevel, profitTarget, and disclaimer.
`,
});

const suggestTradingStrategyFlow = ai.defineFlow(
  {
    name: 'suggestTradingStrategyFlow',
    inputSchema: SuggestTradingStrategyInputSchema,
    outputSchema: SuggestTradingStrategyOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

